' Jira API URL
jiraURL = "https://jira.maybank.com.my/rest/api/2/issue"
username = "80012664"
password = "Etiqa12"

' Defect details
projectKey = "PROJ" ' Replace with your Jira project key
issueType = "Bug"   ' Replace with the issue type (e.g., Bug, Task)
summary = "Sample Defect: Issue created from UFT"
description = "Steps to reproduce:\n1. Step 1\n2. Step 2\n\nExpected: Expected result\nActual: Actual result"
priority = "High"    ' Replace with the priority (e.g., Low, Medium, High)

' Prepare JSON payload for the API
jsonPayload = "{" & _
    """fields"": {" & _
        """project"": {""key"": """ & projectKey & """}," & _
        """summary"": """ & summary & """ ," & _
        """description"": """ & description & """ ," & _
        """issuetype"": {""name"": """ & issueType & """}," & _
        """priority"": {""name"": """ & priority & """}" & _
    "}" & _
"}"






' Required for HTTP requests
Set http = CreateObject("MSXML2.XMLHTTP")

' Jira API endpoint and authentication details
url = "https://jira.maybank.com.my/rest/api/2/issue/"
username = "80012664"
password = "Etiqa12"
authHeader = "Basic " & Base64Encode(username & ":" & password)

' Prepare the JSON payload for creating an issue
jsonPayload = "{""fields"": {" & _
              """project"": {""key"": ""PROJECT_KEY""}," & _
              """summary"": ""Automation Defect: Test Case Failure""," & _
              """description"": ""Description of the defect: Failure observed during test execution.""," & _
              """issuetype"": {""name"": ""Bug""}," & _
              """priority"": {""name"": ""High""}" & _
              "}}"

' Make the POST request
http.Open "POST", url, False
http.setRequestHeader "Content-Type", "application/json"
http.setRequestHeader "Authorization", authHeader
http.Send jsonPayload

' Handle the response
If http.Status = 201 Then
    MsgBox "Defect created successfully! Response: " & http.responseText
Else
    MsgBox "Failed to create defect. Status: " & http.Status & " Response: " & http.responseText
End If

' Function to encode username and password in Base64
Function Base64Encode(input)
    Dim xml, node
    Set xml = CreateObject("MSXML2.DOMDocument.3.0")
    Set node = xml.createElement("Base64")
    node.dataType = "bin.base64"
    node.nodeTypedValue = input
    Base64Encode = Replace(node.text, vbLf, "")
End Function

' Initialize the HTTP object for making the API call
Set http = CreateObject("MSXML2.XMLHTTP")
http.Open "POST", jiraURL, False, username, password
http.setRequestHeader "Content-Type", "application/json"
http.Send jsonPayload

' Check the response and display the result
If http.Status = 201 Then
    MsgBox "Defect created successfully! Response: " & http.responseText
Else
    MsgBox "Failed to create defect. Status: " & http.Status & vbCrLf & http.responseText
End If

' Release the HTTP object
Set http = Nothing







' Set Jira API URL and credentials
url = "https://jira.maybank.com.my/rest/api/2/issue"
username = "80012664"
password = "Etiqa12"

' Create the JSON payload for creating a defect
jsonPayload = "{""fields"": {""project"": {""key"": ""TEST""},""summary"": ""Test Issue"",""description"": ""This is a test"",""issuetype"": {""name"": ""Bug""}}}"

' Set up the HTTP request to send the payload to Jira API
Set objHTTP = CreateObject("MSXML2.XMLHTTP")
objHTTP.Open "POST", url, False, username, password
objHTTP.setRequestHeader "Content-Type", "application/json"

' Send the request with the JSON payload
objHTTP.Send jsonPayload

' Check the response
If objHTTP.Status = 201 Then
    MsgBox "Defect created successfully!"
Else
    MsgBox "Error: " & objHTTP.Status & " " & objHTTP.StatusText
End If







The download of the specified resource has failed.


Line (15): "objHTTP.Send jsonPayload".




' Set Jira API URL and credentials
url = "https://jira.maybank.com.my/rest/api/2/myself"
username = "80012664"
password = "Etiqa12"

' Set up the HTTP request to send the GET request to Jira API
Set objHTTP = CreateObject("MSXML2.XMLHTTP")
objHTTP.Open "GET", url, False, username, password
objHTTP.setRequestHeader "Content-Type", "application/json"

' Send the GET request
objHTTP.Send

' Check the response
If objHTTP.Status = 200 Then
    ' Parse the response (JSON)
    Set jsonResponse = JsonConverter.ParseJson(objHTTP.responseText)
    
    ' Extract and display the timeZone from the response
    timeZone = jsonResponse("timeZone")
    
    ' Show the timeZone in a message box
    MsgBox "Your Jira timeZone is: " & timeZone
Else
    MsgBox "Error: " & objHTTP.Status & " " & objHTTP.StatusText
End If







' Set Jira API URL and credentials
url = "https://jira.maybank.com.my/rest/api/2/myself"
username = "80012664"
password = "Etiqa12"

' Create the HTTP request
Set objHTTP = CreateObject("MSXML2.XMLHTTP")

' Bypass SSL verification (not recommended for production)
objHTTP.setOption 2, 13056 ' Disables SSL verification (NOT RECOMMENDED)

' Set up the HTTP request to send the GET request to Jira API
objHTTP.Open "GET", url, False, username, password
objHTTP.setRequestHeader "Content-Type", "application/json"

' Send the GET request
objHTTP.Send

' Check the response
If objHTTP.Status = 200 Then
    ' Parse the response (JSON)
    Set jsonResponse = JsonConverter.ParseJson(objHTTP.responseText)
    
    ' Extract and display the timeZone from the response
    timeZone = jsonResponse("timeZone")
    
    ' Show the timeZone in a message box
    MsgBox "Your Jira timeZone is: " & timeZone
Else
    MsgBox "Error: " & objHTTP.Status & " " & objHTTP.StatusText
End If







' Set Jira API URL and credentials
url = "https://jira.maybank.com.my/rest/api/2/myself"
username = "80012664"
password = "Etiqa12"

' Create the HTTP request using ServerXMLHTTP for SSL options
Set objHTTP = CreateObject("MSXML2.ServerXMLHTTP.6.0")

' Bypass SSL verification (not recommended for production)
objHTTP.setOption 2, 13056 ' Disables SSL certificate checks (NOT RECOMMENDED)

' Set up the HTTP request to send the GET request to Jira API
objHTTP.Open "GET", url, False, username, password
objHTTP.setRequestHeader "Content-Type", "application/json"

' Send the GET request
objHTTP.Send

' Check the response
If objHTTP.Status = 200 Then
    ' Parse the response (JSON)
    Set jsonResponse = JsonConverter.ParseJson(objHTTP.responseText)
    
    ' Extract and display the timeZone from the response
    timeZone = jsonResponse("timeZone")
    
    ' Show the timeZone in a message box
    MsgBox "Your Jira timeZone is: " & timeZone
Else
    MsgBox "Error: " & objHTTP.Status & " " & objHTTP.StatusText
End If


